digraph pyc101_learnning_map {
    /*生成命令:
$ neato -Tjpeg pyc101_learnning_map.dot -o pyc101_learnning_map.jpg -Tcmapx -o pyc101_learnning_map.map
$ python ../dotools/gen4dot2htm.py --neato -t ../dotools/tpl_idx.htm -i "101.pythonic learnning map-full" -d pyc101_learnning_map.dot -o pyc101_learnning_map.html

    全局设定
    */
    graph [label="101.pythonic 课程知识点关系\n{gen. by Graphviz}"
        ,fontsize=12.0,fontcolor=snow
        ,labeljust="l",labelloc="t",center=1
        ,ranksep=0.1,center=1,ratio=compress
        ,rankdir=LR
        ,bgcolor="#333333"
        ];

    node[fontsize=11.0,height=0.4
        ,style="filled,setlinewidth(0.5)",fillcolor="#334233",color=gray,fontcolor=snow
        ,shape=plaintext
        ];

    edge [fontsize=9.0,fontcolor=gray
        ,color=azure
        ,arrowsize=0.5,arrowhead=vee,arrowtail=none
        ,style="setlinewidth(0.5)"
        ];

    PYC [label="蠎营\nPythoniCamp",shape=box3d
            ,URL="https://gitlab.com/pythonicamp"];
    ch00  [label="ch00\n周蠎",shape=tab,URL="#"];
        py2  [label="Python 2.7" ,URL="#"];
        zhpy  [label="zhpy" ,URL="#"];
        pip  [label="pip" ,URL="#"];

    ch00->py2->{zhpy pip};


    ch01  [label="ch01\nCLI",shape=tab,URL="#"];
        shell  [label="shell " ,URL="#"];
            bash   [label="bash  ",URL="#"];
            zsh    [label="zsh   ",URL="#"];
            iterm2 [label="iterm2",URL="#"];
            cmder  [label="cmder ",URL="#"];
        py3 [label="Python 3.7",URL="#"];
        click [label="Click",URL="#"];
            stdin [label="stdin",URL="#"];
            stdout [label="stdout",URL="#"];
            stderr [label="stderr",URL="#"];
    ch01->{shell py3};
        shell->{bash zsh terminal};
        py3->{click };
            click->{stdin stdout stderr}


    ch02  [label="ch02\nhelp",shape=tab,URL="#"];
        print [label="print()",URL="#"];
        format [label="format()",URL="#"];
        doc [label="doc()",URL="#"];
        help [label="help()",URL="#"];
        dir [label="dir()",URL="#"];
    ch02->{print doc help dir};
        print->{format};

    ch03  [label="ch03\ngit",shape=tab,URL="#"];
        git [label="git",URL="#"];
        github [label="github",URL="#"];
        gitlab [label="gitlab",URL="#"];
        issue [label="issue",URL="#"];
        wiki [label="wiki",URL="#"];
        comm [label="commit comments",URL="#"];
    ch03->{git};
        git->{github gitlab};
            gitlab->{issue wiki comm};

    ch04  [label="ch04\npip",shape=tab,URL="#"];
        logging [label="logging",URL="#"];
            fileH [label="file\nHandler",URL="#"];
            bLevel [label="Bug Level",URL="#"];
                blCRITICAL  [label="CRITICAL",URL="#"];
                blERROR     [label="ERROR",URL="#"];
                blWARNING   [label="WARNING",URL="#"];
                blINFO      [label="INFO",URL="#"];
                blDEBUG     [label="DEBUG",URL="#"];
    ch04->{ logging};
        logging->{fileH bLevel};
            bLevel->{blCRITICAL blERROR blWARNING blINFO blDEBUG};

    ch05  [label="ch05\ntext",shape=tab,URL="#"];
        csv [label="csv",URL="#"];
        dict [label="dict",URL="#"];
        pickle [label="pickle",URL="#"];
    ch05->{csv dict pickle};

    ch06  [label="ch06\nweb",shape=tab,URL="#"];
        curl [label="curl",URL="#"];
        web [label="web",URL="#"];
            css [label="css",URL="#"];
            htm [label="html",URL="#"];
            js [label="JavaScript",URL="#"];
            REST [label="RESTful",URL="#"];
        fwork [label="framework",URL="#"];
            bottle [label="bottle",URL="#"];
                flask [label="flask",URL="#"];
                django [label="django",URL="#"];
            rout [label="route",URL="#"];
            get [label="get",URL="#"];
            post [label="post",URL="#"];
            request [label="request",URL="#"];
    ch06->{web fwork curl};
        fwork->{bottle flask django};
            bottle->{route get post rout request};
        web->{css htm REST js};
            REST->{curl bottle flask django};

    ch07  [label="ch07\nlogging",shape=tab,URL="#"];
        http [label="http",URL="#"];
        url [label="url",URL="#"];
        uri [label="uri",URL="#"];
    ch07->{web http};
        http->{uri url};

    ch08  [label="ch08\nSaaS",shape=tab,URL="#"];
        SaaS [label="SaaS",URL="#"];
            SAE [label="SAE",URL="#"];
            AWS [label="AWS",URL="#"];
            GAE [label="GAE",URL="#"];
            etc [label="...",URL="#"];
            Heroku [label="Heroku",URL="#"];
                hcli [label="Heroku-CLI",URL="#"];
                redis [label="redis",URL="#"];
                    NoSQL [label="NoSQL",URL="#"];
                        Mango [label="MongoDB",URL="#"];
                        Couch [label="CouchDB",URL="#"];
                    RMDB [label="RMDB",URL="#"];
                        MySQL [label="MySQL",URL="#"];
                        Pg [label="PostgreSQL",URL="#"];
                    SQL [label="SQL",URL="#"];
                ENV [label="ENV",URL="#"];
    ch08->SaaS->{SAE GAE AWS Heroku etc};
        Heroku->{hcli redis ENV Pg};
        NoSQL->{redis Mango Couch};
        RMDB->{MySQL Pg}->SQL;

    ch09  [label="ch09\nAPI",shape=tab,URL="#"];
        Wechat [label="微信",URL="https://mp.weixin.qq.com/"];
            wxapp [label="小应用",URL="https://developers.weixin.qq.com/miniprogram/dev/index.html"];
            wxsrv [label="公众平台",URL="https://mp.weixin.qq.com/wiki?t=resource/res_main&id=mp1445241432"];
        Slack [label="Slack",URL="https://slack.com/features"];
            Slapp [label="Slack app",URL="https://api.slack.com/tutorials/slack-apps-and-postman"];
            Slash [label="/Commands",URL="https://api.slack.com/slash-commands"];
        ngrok [label="ngrok",URL="https://api.slack.com/tutorials/tunneling-with-ngrok"];
        terminal [label="terminal",URL="#"];
            tmux [label="tmux",URL="#"];
    ch09->{Wechat Slack};
        Wechat->{wxapp wxsrv};
        Slack->{Slapp Slash ngrok};

    ch10  [label="ch10\nMVP",shape=tab,URL="#"];
        terminal [label="terminal",URL="#"];

        
    ch11  [label="ch11\nCI",shape=tab,URL="#"];
    ch12  [label="ch12\n探索",shape=tab,URL="#"];

    PYC->ch00 [label="project0",style="setlinewidth(4)",color=green];
    ch00->ch01->ch02->ch03->ch04->ch05->ch06->ch07->ch08->ch09->ch10->ch11->ch12 [label="",style="setlinewidth(3)",color=green];


    pip->{zhpy click logging request};
    terminal->{ngrok tmux iterm2 cmder curl};

    mailme [label="邮件吼俺",shape=ellipse,style="filled,dashed,setlinewidth(5)"
        ,color="#333333",fillcolor=dimgray
        ,URL="mailto:pythonicamp@googlegroups.com?subject=[101 mapping] "];

    ZQ  [label="返回\n",shape=ellipse,style="dotted"
        ,URL="https://gitlab.com/pythonicamp"];


    edge [style=invis];
    {mailme ZQ}->PYC;
    
/*
    title->ZQ;
    mailme->OBP;

    title [label="101.pythonic\n课程知识点关系\n{gen. by Graphviz}"
                URL="#"];
    

*/

}
